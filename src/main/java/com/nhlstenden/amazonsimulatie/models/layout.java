package com.nhlstenden.amazonsimulatie.models;

import java.security.interfaces.RSAMultiPrimePrivateCrtKey;
import java.util.Random;

import javax.naming.ldap.Rdn;

class Layout {
	private int[][] layout;
	private int layoutRows;
	private int layoutCols;
	
			

	
	public Layout() {


		int[][] layout = {	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,1},
		{1,3,1,5,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,5,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,5,1,3,1,3,1,5,1,3,1,3,1,3,1,1},
		{1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1},
		{1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},};
		
		this.layout = layout;
		this.layoutRows = layout[0].length;
		this.layoutCols = layout[0].length;
		
//		Random rdRandom  = new Random();
//		
//		this.layout = new int[31][61];
//		this.layoutRows = 31; 
//		this.layoutCols = 60;
//		
//			for (int i = 0; i < this.layoutRows - 10; i++) {
//				for (int j = 0; j < this.layoutCols; j++) {
//					if (j % 3 == 0) {
//						layout[i][j] = 1;
//					}
//					else if (j % 2 == 1) {
//						layout[i][j] = 3;
//					}
//				}
//			}
//
//			for (int i = 0; i < this.layoutRows - 10; i++) {
//				for (int j = 0; j < this.layoutCols; j++) {
//					if (i % 5 == 0) {
//						layout[i][j] = 1;
//					}
//					if (layout[i][j] == 3) {
//						if (rdRandom.nextBoolean() == true) {
//							layout[i][j] = 5;
//						}	
//					}
//				}
//			}
//			
//			for (int i = this.layoutRows - 10; i < this.layoutRows - 6; i++) {
//				for (int j = 0; j < this.layoutCols; j++) {
//					if (j == this.layoutCols / 2 - 1 || j == this.layoutCols / 2 + 1) {
//						layout[i][j] = 4; 
//					}
//					else if (j == this.layoutCols / 2) {
//						layout[i][j] = 2; 
//					}
//				}
//			}
	}
	
	public int getCol() {
		return this.layoutCols;
	}
	
	public int getRows() {
		return this.layoutRows;
	}
	
	public int[][] Getlayout(){
		return layout;
	}
	
	public int getValue(int x, int y) {
		return layout[x][y];
	}
}
